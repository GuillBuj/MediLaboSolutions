services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: patientdb
    volumes:
      - ./scripts/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: notedb
    volumes:
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    healthcheck:
        test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
        interval: 15s
        timeout: 10s
        retries: 10
    networks:
      - app-network
  

  patient-service:
    build: ./patient-service
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/patientdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
        - app-network


  note-service:
    build: ./note-service
    container_name: note-service
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/notedb
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  report-service:
    build: ./report-service
    depends_on:
      patient-service:
        condition: service_healthy
      note-service:
        condition: service_healthy
    ports:
      - "8082:8082"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  gateway:
    build: ./gateway
    depends_on:
      patient-service:
        condition: service_healthy
      note-service:
        condition: service_healthy
      report-service:
        condition: service_healthy
    ports:
      - "8083:8083"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 10
    networks:
      - app-network
      -
  frontend-service:
    build: ./frontend-service
    depends_on:
      - gateway
    ports:
      - "8084:8084"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 10
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
